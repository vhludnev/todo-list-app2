{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","newResult","doneClass","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","importantClass","classNames","important","onClick","TodoList","todos","elements","map","item","id","otherLabels","key","ItemStatusFilter","buttons","name","filter","onFilterChange","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","todoData","initialTodos","localStorage","getItem","JSON","parse","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","createTodoItem","toggleProperty","Date","now","arr","propName","oldItem","items","length","toLowerCase","indexOf","setItem","stringify","visibleItems","search","doneCount","todoCount","todayDate","toLocaleDateString","navigator","userLanguage","browserLanguage","language","weekday","year","month","day","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9266eb5a.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n  const result = toDo > 0 ?  toDo  + ' more left to do, ' +  done  + ' done' : 'Done!';\r\n  const newResult = toDo === 0 && done === 0 ? 'Add your first todo' : result;\r\n  \r\n  let doneClass = '';\r\n  if (toDo === 0 && done !== 0) {\r\n    doneClass += 'alldone';\r\n  } else if (toDo === 0 && done === 0) {\r\n    doneClass += 'firsttodo';\r\n  }\r\n\r\n    return (\r\n\r\n      <div className=\"app-header d-flex\">\r\n        <h2 className={doneClass}>{ newResult }</h2>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({ term });       // the same as term: term\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input type=\"text\"\r\n            className=\"form-control search-input\"\r\n            placeholder=\"type to search\"\r\n            value={this.state.term}\r\n            onChange={this.onSearchChange} />\r\n    );\r\n  };\r\n};\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({ label, onDeleted, onToggleImportant, onToggleDone, done, important }) => {\r\n\r\n    let importantClass = '';\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n        classNames += ' done';\r\n    }\r\n\r\n    if (important) {\r\n        classNames += ' important';\r\n        importantClass += 'active';\r\n    }\r\n\r\n    return (\r\n        <div className={classNames}>\r\n            <span \r\n                className=\"todo-list-item-label\" \r\n                onClick={onToggleDone} >\r\n                { label }\r\n            </span>\r\n            <div className=\"buttonsbox\">\r\n                <button type=\"button\"\r\n                        className={`btn btn-outline-success btn-sm float-right ${importantClass}`}\r\n                        onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n\r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm float-right\"\r\n                        onClick={onDeleted}>\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoListItem; ","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\n\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {  \r\n\r\n    const elements = todos.map(item => {\r\n      const { id, ...otherLabels } = item;\r\n      \r\n      return (\r\n        // <li key={item.id}>\r\n        //   <TodoListItem \r\n        //     label={item.label}\r\n        //     important={item.important} />\r\n        // </li>\r\n        ///// the same but with spread operator for objects /////\r\n\r\n        <li key={id} className=\"list-group-item\">\r\n          <TodoListItem \r\n            { ...otherLabels } \r\n            onDeleted={ () => onDeleted(id) } \r\n            onToggleImportant={ () => onToggleImportant(id) }\r\n            onToggleDone={ () => onToggleDone(id) }/>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <ul className=\"list-group todo-list\">\r\n        { elements }\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  export default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'done', label: 'Done' }\r\n  ];\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const isActive = filter === name;\r\n      const classNames = isActive ? 'btn-info' : 'btn-outline-secondary'; \r\n\r\n      return (\r\n        <button type=\"button\"\r\n                className={`btn ${classNames}`} \r\n                key={name}\r\n                onClick={ () => onFilterChange(name) }>\r\n            {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n  state = {\r\n    label: ''\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onItemAdded(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"item-add-form d-flex\"\r\n            onSubmit={this.state.label ? this.onSubmit : e => e.preventDefault()} >\r\n        <input type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"add your todo\" \r\n                onChange={this.onLabelChange}\r\n                value={this.state.label} />\r\n        <button className=\"btn btn-outline-secondary\" >\r\n                Add\r\n        </button>\r\n      </form>\r\n    );\r\n  };\r\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n//import { v1 as uuidv1 } from 'uuid';\r\n\r\n// components:\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n//  maxId = 100; // new todos will have ids starting from number 100 \r\n\r\n  state = {\r\n    todoData: [],\r\n    term: '',\r\n    filter: 'all' // active, all, done\r\n  };\r\n\r\n initialTodos = () => {  \r\n   if (localStorage.getItem('todos')) {\r\n     this.setState(() => {\r\n       return {\r\n         todoData: JSON.parse(localStorage.getItem('todos'))\r\n       };\r\n     })\r\n   }\r\n }\r\n\r\n  createTodoItem(label) { // will return: { label: '...', important: false, done: false, id: ... }\r\n    return {\r\n      label,              // the same as: label: label\r\n      important: false,\r\n      done: false,\r\n      id: Date.now() /* uuidv1() */  /* this.maxId++ */  // generating id (timestamp in ms)\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n      // todoData.splice(idx, 1)  /* should never be used derectly on existing state of Array of data */ \r\n\r\n      ////// correct way:\r\n      // const before = todoData.slice(0, idx);\r\n      // const after = todoData.slice(idx + 1);\r\n      // const newArray = [ ...before, ... after];\r\n\r\n      ///// the shorter version of above written:\r\n      const newArray = [\r\n        ...todoData.slice(0, idx),\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n    this.setState(({ todoData }) => {\r\n      // todoData.push(newItem); /* should never be used derectly on existing state of Array of data */ \r\n      ////// correct way:\r\n      const newArr = [ ...todoData, newItem ];\r\n\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = {...oldItem,\r\n      [propName]: !oldItem[propName]};\r\n\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      };\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label\r\n          .toLowerCase()\r\n          .indexOf(term.toLowerCase()) > -1;   // indexOf(term) returns 0 or more (t.i. > -1) if there is a label(term)\r\n    })\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch(filter) {\r\n      case 'all': \r\n        return items;\r\n      case 'active':\r\n        return items.filter(item => !item.done); // the same as: item.done === false\r\n      case 'done':\r\n        return items.filter(item => item.done); // the same as: item.done === true\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  componentDidMount() { \r\n    // Load toods from LS once after reboot\r\n    this.initialTodos()  \r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // Save to Local Storage\r\n    localStorage.setItem('todos', JSON.stringify(this.state.todoData));\r\n  }\r\n\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n    const doneCount = todoData.filter((el) => el.done).length,\r\n          todoCount = todoData.length - doneCount;\r\n\r\n    const todayDate = new Date().toLocaleDateString((navigator.userLanguage||navigator.browserLanguage||navigator.language), { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\r\n\r\n    return (\r\n      <div className=\"todo-app container\">\r\n        <span className=\"date\">{todayDate}</span>\r\n        <h1>My Todo List App 2</h1>\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <ItemAddForm \r\n          onItemAdded={this.addItem} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel \r\n            onSearchChange={this.onSearchChange} />\r\n          <ItemStatusFilter \r\n            filter={filter}\r\n            onFilterChange={this.onFilterChange} />\r\n        </div>\r\n        <TodoList \r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone} />      \r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, \n  document.getElementById('root'));"],"sourceRoot":""}